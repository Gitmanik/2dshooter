### YamlMime:ManagedReference
items:
- uid: Global.HealthTarget
  commentId: T:Global.HealthTarget
  id: HealthTarget
  parent: Global
  children:
  - Global.HealthTarget.Damage(GameObject,System.Single)
  - Global.HealthTarget.health
  - Global.HealthTarget.onDamage
  langs:
  - csharp
  - vb
  name: HealthTarget
  nameWithType: HealthTarget
  fullName: HealthTarget
  type: Class
  source:
    id: HealthTarget
    path: ''
    startLine: 29669
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class HealthTarget : MonoBehaviour, Target'
    content.vb: >-
      Public Class HealthTarget
          Inherits MonoBehaviour
          Implements Target
  inheritance:
  - System.Object
  implements:
  - Global.Target
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.HealthTarget.onDamage
  commentId: F:Global.HealthTarget.onDamage
  id: onDamage
  parent: Global.HealthTarget
  langs:
  - csharp
  - vb
  name: onDamage
  nameWithType: HealthTarget.onDamage
  fullName: HealthTarget.onDamage
  type: Field
  source:
    id: onDamage
    path: ''
    startLine: 29671
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public UnityEvent onDamage
    return:
      type: Global.UnityEvent
    content.vb: Public onDamage As UnityEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HealthTarget.health
  commentId: F:Global.HealthTarget.health
  id: health
  parent: Global.HealthTarget
  langs:
  - csharp
  - vb
  name: health
  nameWithType: HealthTarget.health
  fullName: HealthTarget.health
  type: Field
  source:
    id: health
    path: ''
    startLine: 29673
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float health
    return:
      type: System.Single
    content.vb: Public health As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.HealthTarget.Damage(GameObject,System.Single)
  commentId: M:Global.HealthTarget.Damage(GameObject,System.Single)
  id: Damage(GameObject,System.Single)
  parent: Global.HealthTarget
  langs:
  - csharp
  - vb
  name: Damage(GameObject, Single)
  nameWithType: HealthTarget.Damage(GameObject, Single)
  fullName: HealthTarget.Damage(GameObject, System.Single)
  type: Method
  source:
    id: Damage
    path: ''
    startLine: 29674
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Damage(GameObject x, float damage)
    parameters:
    - id: x
      type: Global.GameObject
    - id: damage
      type: System.Single
    content.vb: Public Sub Damage(x As GameObject, damage As Single)
  overload: Global.HealthTarget.Damage*
  implements:
  - Global.Target.Damage(GameObject,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Target
  commentId: T:Global.Target
  name: Target
  nameWithType: Target
  fullName: Target
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.UnityEvent
  commentId: '!:Global.UnityEvent'
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEvent
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Global.HealthTarget.Damage*
  commentId: Overload:Global.HealthTarget.Damage
  name: Damage
  nameWithType: HealthTarget.Damage
  fullName: HealthTarget.Damage
- uid: Global.Target.Damage(GameObject,System.Single)
  commentId: M:Global.Target.Damage(GameObject,System.Single)
  parent: Global.Target
  isExternal: true
  name: Damage(GameObject, Single)
  nameWithType: Target.Damage(GameObject, Single)
  fullName: Target.Damage(GameObject, System.Single)
  spec.csharp:
  - uid: Global.Target.Damage(GameObject,System.Single)
    name: Damage
    nameWithType: Target.Damage
    fullName: Target.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Target.Damage(GameObject,System.Single)
    name: Damage
    nameWithType: Target.Damage
    fullName: Target.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
