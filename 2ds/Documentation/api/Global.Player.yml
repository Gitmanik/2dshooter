### YamlMime:ManagedReference
items:
- uid: Global.Player
  commentId: T:Global.Player
  id: Player
  parent: Global
  children:
  - Global.Player.allPlayers
  - Global.Player.Damage(GameObject,System.Single)
  - Global.Player.health
  - Global.Player.i
  - Global.Player.info
  - Global.Player.isAlive
  - Global.Player.isReloading
  - Global.Player.Local
  - Global.Player.LockMovement
  - Global.Player.ping
  - Global.Player.reloadingState
  - Global.Player.Setup(AuthRequestMessage)
  - Global.Player.speed
  - Global.Player.TargetTeleport(Vector3)
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: Player
  type: Class
  source:
    id: Player
    path: ''
    startLine: 29003
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class Player : NetworkBehaviour, Target'
    content.vb: >-
      Public Class Player
          Inherits NetworkBehaviour
          Implements Target
  inheritance:
  - System.Object
  implements:
  - Global.Target
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.Player.allPlayers
  commentId: F:Global.Player.allPlayers
  id: allPlayers
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: allPlayers
  nameWithType: Player.allPlayers
  fullName: Player.allPlayers
  type: Field
  source:
    id: allPlayers
    path: ''
    startLine: 29007
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static List<Player> allPlayers
    return:
      type: System.Collections.Generic.List{Player}
    content.vb: Public Shared allPlayers As List(Of Player)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Player.Local
  commentId: F:Global.Player.Local
  id: Local
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Local
  nameWithType: Player.Local
  fullName: Player.Local
  type: Field
  source:
    id: Local
    path: ''
    startLine: 29008
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static Player Local
    return:
      type: Global.Player
    content.vb: Public Shared Local As Player
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.Player.LockMovement
  commentId: P:Global.Player.LockMovement
  id: LockMovement
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: LockMovement
  nameWithType: Player.LockMovement
  fullName: Player.LockMovement
  type: Property
  source:
    id: LockMovement
    path: ''
    startLine: 29010
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool LockMovement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LockMovement As Boolean
  overload: Global.Player.LockMovement*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Global.Player.i
  commentId: F:Global.Player.i
  id: i
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: i
  nameWithType: Player.i
  fullName: Player.i
  type: Field
  source:
    id: i
    path: ''
    startLine: 29016
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public PlayerInventory i
    return:
      type: Global.PlayerInventory
    content.vb: Public i As PlayerInventory
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.info
  commentId: F:Global.Player.info
  id: info
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: info
  nameWithType: Player.info
  fullName: Player.info
  type: Field
  source:
    id: info
    path: ''
    startLine: 29023
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public PlayerInformation info
    return:
      type: Global.PlayerInformation
    content.vb: Public info As PlayerInformation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.health
  commentId: F:Global.Player.health
  id: health
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: health
  nameWithType: Player.health
  fullName: Player.health
  type: Field
  source:
    id: health
    path: ''
    startLine: 29024
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float health
    return:
      type: System.Single
    content.vb: Public health As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.ping
  commentId: F:Global.Player.ping
  id: ping
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ping
  nameWithType: Player.ping
  fullName: Player.ping
  type: Field
  source:
    id: ping
    path: ''
    startLine: 29025
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public int ping
    return:
      type: System.Int32
    content.vb: Public ping As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.isAlive
  commentId: F:Global.Player.isAlive
  id: isAlive
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isAlive
  nameWithType: Player.isAlive
  fullName: Player.isAlive
  type: Field
  source:
    id: isAlive
    path: ''
    startLine: 29026
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool isAlive
    return:
      type: System.Boolean
    content.vb: Public isAlive As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.isReloading
  commentId: F:Global.Player.isReloading
  id: isReloading
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isReloading
  nameWithType: Player.isReloading
  fullName: Player.isReloading
  type: Field
  source:
    id: isReloading
    path: ''
    startLine: 29027
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public bool isReloading
    return:
      type: System.Boolean
    content.vb: Public isReloading As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.reloadingState
  commentId: F:Global.Player.reloadingState
  id: reloadingState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: reloadingState
  nameWithType: Player.reloadingState
  fullName: Player.reloadingState
  type: Field
  source:
    id: reloadingState
    path: ''
    startLine: 29028
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float reloadingState
    return:
      type: System.Single
    content.vb: Public reloadingState As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.speed
  commentId: F:Global.Player.speed
  id: speed
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: speed
  nameWithType: Player.speed
  fullName: Player.speed
  type: Field
  source:
    id: speed
    path: ''
    startLine: 29029
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float speed
    return:
      type: System.Single
    content.vb: Public speed As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.TargetTeleport(Vector3)
  commentId: M:Global.Player.TargetTeleport(Vector3)
  id: TargetTeleport(Vector3)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TargetTeleport(Vector3)
  nameWithType: Player.TargetTeleport(Vector3)
  fullName: Player.TargetTeleport(Vector3)
  type: Method
  source:
    id: TargetTeleport
    path: ''
    startLine: 29281
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void TargetTeleport(Vector3 newPos)
    parameters:
    - id: newPos
      type: Global.Vector3
    content.vb: Public Sub TargetTeleport(newPos As Vector3)
  overload: Global.Player.TargetTeleport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.Setup(AuthRequestMessage)
  commentId: M:Global.Player.Setup(AuthRequestMessage)
  id: Setup(AuthRequestMessage)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Setup(AuthRequestMessage)
  nameWithType: Player.Setup(AuthRequestMessage)
  fullName: Player.Setup(AuthRequestMessage)
  type: Method
  source:
    id: Setup
    path: ''
    startLine: 29310
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Setup(AuthRequestMessage data)
    parameters:
    - id: data
      type: Global.AuthRequestMessage
    content.vb: Public Sub Setup(data As AuthRequestMessage)
  overload: Global.Player.Setup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.Player.Damage(GameObject,System.Single)
  commentId: M:Global.Player.Damage(GameObject,System.Single)
  id: Damage(GameObject,System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Damage(GameObject, Single)
  nameWithType: Player.Damage(GameObject, Single)
  fullName: Player.Damage(GameObject, System.Single)
  type: Method
  source:
    id: Damage
    path: ''
    startLine: 29376
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void Damage(GameObject from, float damage)
    parameters:
    - id: from
      type: Global.GameObject
    - id: damage
      type: System.Single
    content.vb: Public Sub Damage(from As GameObject, damage As Single)
  overload: Global.Player.Damage*
  implements:
  - Global.Target.Damage(GameObject,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Global.Target
  commentId: T:Global.Target
  name: Target
  nameWithType: Target
  fullName: Target
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Player}
  commentId: T:System.Collections.Generic.List{Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Player>
  nameWithType: List<Player>
  fullName: System.Collections.Generic.List<Player>
  nameWithType.vb: List(Of Player)
  fullName.vb: System.Collections.Generic.List(Of Player)
  name.vb: List(Of Player)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.Player
    name: Player
    nameWithType: Player
    fullName: Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.Player
    name: Player
    nameWithType: Player
    fullName: Player
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Player.LockMovement*
  commentId: Overload:Global.Player.LockMovement
  name: LockMovement
  nameWithType: Player.LockMovement
  fullName: Player.LockMovement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.PlayerInventory
  commentId: '!:Global.PlayerInventory'
  isExternal: true
  name: PlayerInventory
  nameWithType: PlayerInventory
  fullName: PlayerInventory
- uid: Global.PlayerInformation
  commentId: T:Global.PlayerInformation
  name: PlayerInformation
  nameWithType: PlayerInformation
  fullName: PlayerInformation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Global.Player.TargetTeleport*
  commentId: Overload:Global.Player.TargetTeleport
  name: TargetTeleport
  nameWithType: Player.TargetTeleport
  fullName: Player.TargetTeleport
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Global.Player.Setup*
  commentId: Overload:Global.Player.Setup
  name: Setup
  nameWithType: Player.Setup
  fullName: Player.Setup
- uid: Global.AuthRequestMessage
  commentId: T:Global.AuthRequestMessage
  name: AuthRequestMessage
  nameWithType: AuthRequestMessage
  fullName: AuthRequestMessage
- uid: Global.Player.Damage*
  commentId: Overload:Global.Player.Damage
  name: Damage
  nameWithType: Player.Damage
  fullName: Player.Damage
- uid: Global.Target.Damage(GameObject,System.Single)
  commentId: M:Global.Target.Damage(GameObject,System.Single)
  parent: Global.Target
  isExternal: true
  name: Damage(GameObject, Single)
  nameWithType: Target.Damage(GameObject, Single)
  fullName: Target.Damage(GameObject, System.Single)
  spec.csharp:
  - uid: Global.Target.Damage(GameObject,System.Single)
    name: Damage
    nameWithType: Target.Damage
    fullName: Target.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Global.Target.Damage(GameObject,System.Single)
    name: Damage
    nameWithType: Target.Damage
    fullName: Target.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
