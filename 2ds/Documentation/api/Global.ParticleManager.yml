### YamlMime:ManagedReference
items:
- uid: Global.ParticleManager
  commentId: T:Global.ParticleManager
  id: ParticleManager
  parent: Global
  children:
  - Global.ParticleManager.Instance
  - Global.ParticleManager.Particles
  - Global.ParticleManager.Spawn(EParticleType,Transform)
  - Global.ParticleManager.Spawn(EParticleType,Vector3)
  langs:
  - csharp
  - vb
  name: ParticleManager
  nameWithType: ParticleManager
  fullName: ParticleManager
  type: Class
  source:
    id: ParticleManager
    path: ''
    startLine: 28626
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class ParticleManager : MonoBehaviour'
    content.vb: >-
      Public Class ParticleManager
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Global.ParticleManager.Particles
  commentId: F:Global.ParticleManager.Particles
  id: Particles
  parent: Global.ParticleManager
  langs:
  - csharp
  - vb
  name: Particles
  nameWithType: ParticleManager.Particles
  fullName: ParticleManager.Particles
  type: Field
  source:
    id: Particles
    path: ''
    startLine: 28628
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<ParticleEntry> Particles
    return:
      type: System.Collections.Generic.List{ParticleEntry}
    content.vb: Public Particles As List(Of ParticleEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Global.ParticleManager.Instance
  commentId: F:Global.ParticleManager.Instance
  id: Instance
  parent: Global.ParticleManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ParticleManager.Instance
  fullName: ParticleManager.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 28629
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static ParticleManager Instance
    return:
      type: Global.ParticleManager
    content.vb: Public Shared Instance As ParticleManager
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.ParticleManager.Spawn(EParticleType,Vector3)
  commentId: M:Global.ParticleManager.Spawn(EParticleType,Vector3)
  id: Spawn(EParticleType,Vector3)
  parent: Global.ParticleManager
  langs:
  - csharp
  - vb
  name: Spawn(EParticleType, Vector3)
  nameWithType: ParticleManager.Spawn(EParticleType, Vector3)
  fullName: ParticleManager.Spawn(EParticleType, Vector3)
  type: Method
  source:
    id: Spawn
    path: ''
    startLine: 28642
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static void Spawn(EParticleType type, Vector3 pos)
    parameters:
    - id: type
      type: Global.EParticleType
    - id: pos
      type: Global.Vector3
    content.vb: Public Shared Sub Spawn(type As EParticleType, pos As Vector3)
  overload: Global.ParticleManager.Spawn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Global.ParticleManager.Spawn(EParticleType,Transform)
  commentId: M:Global.ParticleManager.Spawn(EParticleType,Transform)
  id: Spawn(EParticleType,Transform)
  parent: Global.ParticleManager
  langs:
  - csharp
  - vb
  name: Spawn(EParticleType, Transform)
  nameWithType: ParticleManager.Spawn(EParticleType, Transform)
  fullName: ParticleManager.Spawn(EParticleType, Transform)
  type: Method
  source:
    id: Spawn
    path: ''
    startLine: 28647
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static void Spawn(EParticleType type, Transform parent)
    parameters:
    - id: type
      type: Global.EParticleType
    - id: parent
      type: Global.Transform
    content.vb: Public Shared Sub Spawn(type As EParticleType, parent As Transform)
  overload: Global.ParticleManager.Spawn*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Global
  name: Global
  nameWithType: Global
  fullName: Global
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{ParticleEntry}
  commentId: T:System.Collections.Generic.List{ParticleEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ParticleEntry>
  nameWithType: List<ParticleEntry>
  fullName: System.Collections.Generic.List<ParticleEntry>
  nameWithType.vb: List(Of ParticleEntry)
  fullName.vb: System.Collections.Generic.List(Of ParticleEntry)
  name.vb: List(Of ParticleEntry)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Global.ParticleEntry
    name: ParticleEntry
    nameWithType: ParticleEntry
    fullName: ParticleEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Global.ParticleEntry
    name: ParticleEntry
    nameWithType: ParticleEntry
    fullName: ParticleEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Global.ParticleManager
  commentId: T:Global.ParticleManager
  name: ParticleManager
  nameWithType: ParticleManager
  fullName: ParticleManager
- uid: Global.ParticleManager.Spawn*
  commentId: Overload:Global.ParticleManager.Spawn
  name: Spawn
  nameWithType: ParticleManager.Spawn
  fullName: ParticleManager.Spawn
- uid: Global.EParticleType
  commentId: T:Global.EParticleType
  name: EParticleType
  nameWithType: EParticleType
  fullName: EParticleType
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
